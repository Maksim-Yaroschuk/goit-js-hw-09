{"mappings":"AAsBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAS,CAACC,EAASC,KAC9B,MAAMC,EAAgBC,KAAKC,SAAW,GACpCC,YAAW,KACTH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAEnBG,EAAO,C,SAACJ,E,MAAUC,MAEjBA,MA7BQQ,SAASC,cAAc,SAE/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBACN,MAAQZ,MAAAa,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC7C,IAAIC,EAAYC,OAAON,EAAMO,OAC/B,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAOK,MAAOC,GAAG,EACrCvB,EAAcuB,EAAGH,GACdI,MAAK,EAACvB,SAAEA,EAAQC,MAAEA,MACjBuB,QAAQC,IAAI,uBAAqBzB,QAAiBC,UAEnDyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBuB,QAAQC,IAAI,sBAAoBzB,QAAeC,UAEjDkB,GAAaC,OAAOL,EAAKM","sources":["src/js/03-promises.js"],"sourcesContent":["\n\nconst form = document.querySelector(\".form\")\n\nform.addEventListener(\"submit\", onSubmitForm)\n\nfunction onSubmitForm(event) {\n  event.preventDefault()\n  const { delay, step, amount } = event.target.elements\n  let delayStep = Number(delay.value)\nfor (let i = 0; i < amount.value; i+=1) {\ncreatePromise(i, delayStep)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  delayStep += Number(step.value)\n}\n}\n\nfunction createPromise(position, delay) {\n  return new Promise ((resolve, reject) => {\n  const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n  if (shouldResolve) {\n    resolve({position, delay})\n  } else {\n    reject({position, delay})\n  }\n  }, delay)\n  }\n  )\n}\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayStep","Number","value","i","then","console","log","catch"],"version":3,"file":"03-promises.c4c5163f.js.map"}